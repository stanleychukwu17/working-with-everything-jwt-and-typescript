A json web token is made up of the below:
const jwt = `${encodedHeader}.${encodedPayload}.${signature}`;

so an example of the header can be:
const header = {alg:"HS256", typ:'JWT'}
const encodedHeader = Buffer.from(JSON.stringify(header)).toString('base64');


So the payload is any json object you want to store in the token, just like the payload in redux. Try not to store sensible information like password in the user payload Example:
const payload = {sessionId:"1", email:'john.doe@gmail.com'}
const encodedPayload = Buffer.from(JSON.stringify(payload)).toString('base64');


the signature is generated by encrypting the header and the encoded payload, i.e
const signature = crypto
                    .createHmac("sha256", jwtSecret)
                    .update(encodedHeader + "."+ encodedPayload)
                    .digest("base64")